<!doctype html>
<html class="theme-next   use-motion ">
<head>
  <meta charset="UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"/>



<meta http-equiv="Cache-Control" content="no-transform" />
<meta http-equiv="Cache-Control" content="no-siteapp" />












  <link href="/vendors/fancybox/source/jquery.fancybox.css?v=2.1.5" rel="stylesheet" type="text/css"/>




  <link href="//fonts.googleapis.com/css?family=Lato:300,400,700,400italic&subset=latin,latin-ext" rel="stylesheet" type="text/css">



<link href="/vendors/font-awesome/css/font-awesome.min.css?v=4.4.0" rel="stylesheet" type="text/css" />

<link href="/css/main.css?v=0.4.5.2" rel="stylesheet" type="text/css" />


  <meta name="keywords" content="Hexo, NexT" />





  <link rel="alternate" href="/atom.xml" title="一个写代码的" type="application/atom+xml" />




  <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico?v=0.4.5.2" />






<meta name="description">
<meta property="og:type" content="website">
<meta property="og:title" content="一个写代码的">
<meta property="og:url" content="http://yoursite.com/index.html">
<meta property="og:site_name" content="一个写代码的">
<meta property="og:description">
<meta name="twitter:card" content="summary">
<meta name="twitter:title" content="一个写代码的">
<meta name="twitter:description">



<script type="text/javascript" id="hexo.configuration">
  var CONFIG = {
    scheme: '',
    sidebar: 'post',
    motion: true
  };
</script>

  <title> 一个写代码的 </title>
</head>

<body itemscope itemtype="http://schema.org/WebPage" lang="zh_CN">

  <!--[if lte IE 8]>
  <div style=' clear: both; height: 59px; padding:0 0 0 15px; position: relative;margin:0 auto;'>
    <a href="http://windows.microsoft.com/en-US/internet-explorer/products/ie/home?ocid=ie6_countdown_bannercode">
      <img src="http://7u2nvr.com1.z0.glb.clouddn.com/picouterie.jpg" border="0" height="42" width="820"
           alt="You are using an outdated browser. For a faster, safer browsing experience, upgrade for free today or use other browser ,like chrome firefox safari."
           style='margin-left:auto;margin-right:auto;display: block;'/>
    </a>
  </div>
<![endif]-->
  






  <div class="container one-column 
   page-home 
">
    <div class="headband"></div>

    <header id="header" class="header" itemscope itemtype="http://schema.org/WPHeader">
      <div class="header-inner"><div class="site-meta ">
  

  <div class="custom-logo-site-title">
    <a href="/"  class="brand" rel="start">
      <span class="logo-line-before"><i></i></span>
      <span class="site-title">一个写代码的</span>
      <span class="logo-line-after"><i></i></span>
    </a>
  </div>
  <p class="site-subtitle"></p>
</div>

<div class="site-nav-toggle">
  <button>
    <span class="btn-bar"></span>
    <span class="btn-bar"></span>
    <span class="btn-bar"></span>
  </button>
</div>

<nav class="site-nav">
  

  
    <ul id="menu" class="menu ">
      
        
        <li class="menu-item menu-item-home">
          <a href="/" rel="section">
            
              <i class="menu-item-icon fa fa-home fa-fw"></i> <br />
            
            首頁
          </a>
        </li>
      
        
        <li class="menu-item menu-item-archives">
          <a href="/archives" rel="section">
            
              <i class="menu-item-icon fa fa-archive fa-fw"></i> <br />
            
            歸檔
          </a>
        </li>
      
        
        <li class="menu-item menu-item-tags">
          <a href="/tags" rel="section">
            
              <i class="menu-item-icon fa fa-tags fa-fw"></i> <br />
            
            標籤
          </a>
        </li>
      

      
      
    </ul>
  

  
</nav>

 </div>
    </header>

    <main id="main" class="main">
      <div class="main-inner">
        <div id="content" class="content">
          
  <section id="posts" class="posts-expand">

    

    
    

    
      

  
  

  
  
  

  <article class="post post-type-normal " itemscope itemtype="http://schema.org/Article">

    
      <header class="post-header">

        
        
          <h1 class="post-title" itemprop="name headline">
            
            
              
                
                <a class="post-title-link" href="/2015/12/02/code-style/" itemprop="url">
                  代码风格指南
                </a>
              
            
          </h1>
        

        <div class="post-meta">
          <span class="post-time">
            發表於
            <time itemprop="dateCreated" datetime="2015-12-02T11:33:58+08:00" content="2015-12-02">
              2015-12-02
            </time>
          </span>

          

          
            
          

          

        </div>
      </header>
    


    <div class="post-body">

      
      

      
        
          <span itemprop="articleBody">
            
              <h1 id="代码风格指南">代码风格指南</h1><h2 id="格式">格式</h2><p>待完善</p>
<h2 id="接口">接口</h2><ol>
<li>查询类接口直接返回结果类型，如</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">List&lt;OrderDTO&gt; <span class="title">queryOrderByIds</span><span class="params">(List&lt;Integer&gt; orderIds)</span></span></span><br></pre></td></tr></table></figure>
<ol>
<li>操作类接口返回ResultDTO封装类型，如</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ResultDTO&lt;OrderDTO&gt; <span class="title">successOrder</span><span class="params">(<span class="keyword">int</span> orderId)</span></span></span><br></pre></td></tr></table></figure>
<p>ResultDTO包含操作的对象，errerCode，errorMsg。</p>
<ol>
<li>接口中不要声明用不到的参数，超过3个参数时，把多个参数封装成对象。预测未来可能会增加参数时，也封装成对象，方便扩展</li>
<li>接口的定义要明确，接口名，方法名，参数名都要准确的表达真实的含义，参数如果有固定的取值，请定义成枚举或者接口常量，如果是接口常量请声明该接口。如：</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * 根据订单ID查询支付订单信息</span><br><span class="line"> *</span><br><span class="line"> * <span class="doctag">@param</span> orderId 订单ID</span><br><span class="line"> * <span class="doctag">@param</span> state   支付状态</span><br><span class="line"> * <span class="doctag">@return</span></span><br><span class="line"> * <span class="doctag">@see</span> com.baturu.trade.order2.constants.PayState</span><br><span class="line"> */</span></span><br><span class="line">ResultDTO&lt;List&lt;PayOrderDTO&gt;&gt; queryPayOrdersByOrderIdAndState(<span class="keyword">int</span> orderId, <span class="keyword">int</span> state);</span><br></pre></td></tr></table></figure>
<ol>
<li>把操作类接口和查询类接口分开，这是最简单的分离接口的方法。如OrderQueryService,OrderUpdateService</li>
<li>查询复杂对象时，请在查询接口中声明一个XXFillingParam,如</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/**</span><br><span class="line">     * 根据订单id和填充条件批量查询订单信息</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> orderIds          订单id列表</span><br><span class="line">     * <span class="doctag">@param</span> orderFillingParam 是否填充相关联的数据</span><br><span class="line">     * <span class="doctag">@return</span></span><br><span class="line">     */</span></span><br><span class="line">    ResultDTO&lt;List&lt;OrderDTO&gt;&gt; queryOrders(List&lt;Integer&gt; orderIds, OrderFillingParam orderFillingParam);</span><br><span class="line">    </span><br><span class="line"><span class="annotation">@Data</span></span><br><span class="line"><span class="annotation">@AllArgsConstructor</span></span><br><span class="line"><span class="annotation">@NoArgsConstructor</span></span><br><span class="line"><span class="annotation">@Builder</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderFillingParam</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 是否需要简单的订单明细信息.</span><br><span class="line">     * 并不考虑商品快照(StockSnapShot)和车型信息(CarTypeDTO). 方便统计订单明细的数量等.</span><br><span class="line">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> needMinimumOrderDetail;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 是否需要带有商品快照的订单明细.</span><br><span class="line">     * 包括商品快照(StockSnapShot),但不包括车型信息(CarTypeDTO).主要是减少对autoParts的依赖</span><br><span class="line">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> needStockSnapShotOrderDetail;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 是否需要完全的订单明细信息. 包括商品快照信息(StockSnapShot)和车型信息(CarTypeDTO)</span><br><span class="line">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> needCompleteOrderDetail;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 是否需要组织信息</span><br><span class="line">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> needOrg;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 是否需要会员级别信息</span><br><span class="line">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> needOrgMemberLevel;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="代码实现">代码实现</h2><ol>
<li>筛选。请使用Guava的Collections2.filter(Collection, Predicate&lt;?&gt;)进行集合的筛选。第二个参数最好是一个Predicate实现类的单例对象(不用重复创建Predicate实现类对象，提高性能，并且可以复用代码)，如：</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Collection&lt;InquiryDetailDTO&gt; flagNotSetup = Collections2.filter(inquiryDetailDTOs, PartsMainNameFlagNotSetupPredicate.INSTANCE);</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">	<span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">PartsMainNameFlagNotSetupPredicate</span> <span class="keyword">extends</span> <span class="title">SafePredicate</span>&lt;<span class="title">InquiryDetailDTO</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> PartsMainNameFlagNotSetupPredicate INSTANCE = <span class="keyword">new</span> PartsMainNameFlagNotSetupPredicate();</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">safeApply</span><span class="params">(InquiryDetailDTO input)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> PartsMainNameFlag.DEFAULT == input.getPartsMainNameFlag();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>转换<br>请使用Collections2.transform(Collection, Function&lt;?&gt;)对集合内的每一个对象进行转换。第二个参数最好是一个Function实现类的单例对象(不用重复创建Function实现类对象，提高性能，并且可以复用代码)，最后别忘了使用Lists.newArrayList()</li>
</ol>
<ol>
<li>排序</li>
<li>循环</li>
<li>命名 要表达准确的意思，避免词不达意，甚至南辕北辙</li>
<li><p>注释 只有在必须写的时候才写。注释是工程师在代码无法完全表达做的事情的时候，做的辅助性质的描述。出现注释一般是如下2种情况。<br> a. 代码写的太烂，看不懂 or 很多坑<br> b. 确实很难理解，需要注释辅助<br> 注释写多了，也会增加维护成本。</p>
<p>废弃的代码不要注释，直接删除</p>
</li>
</ol>
<p>废弃的接口加上@Deprecated，并且在注释中声明替代接口</p>
<p>尽早return</p>
<p>先判断异常情况</p>
<p>避免倒金字塔式的代码</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(Inquiry iq:pageList)&#123;		</span><br><span class="line">				<span class="keyword">if</span>(iq.isLock())&#123;</span><br><span class="line">					<span class="keyword">for</span>(UserDTO user:userList)&#123;</span><br><span class="line">						<span class="keyword">if</span>(iq.getLockUserId() == user.getUserId())&#123;</span><br><span class="line">							iq.setUserName(user.getUserName());</span><br><span class="line">							<span class="keyword">break</span>;</span><br><span class="line">						&#125;						</span><br><span class="line">					&#125;					</span><br><span class="line">				&#125;				</span><br><span class="line">			&#125;</span><br></pre></td></tr></table></figure>
<p>只有在真的需要try catch的时候才try catch，try catch的代码块要尽量小</p>
<p>不要声明没用到的变量，变量名要准确，不要用一些自己才懂的缩写</p>
<p>用slf4j</p>

            
          </span>
        
      
    </div>

    <footer class="post-footer">
      

      

      
      
        <div class="post-eof"></div>
      
    </footer>
  </article>


    
      

  
  

  
  
  

  <article class="post post-type-normal " itemscope itemtype="http://schema.org/Article">

    
      <header class="post-header">

        
        
          <h1 class="post-title" itemprop="name headline">
            
            
              
                
                <a class="post-title-link" href="/2015/12/02/dubbo-multimap-guava/" itemprop="url">
                  dubbo服务接口使用Multimap(guava)作为返回值的问题
                </a>
              
            
          </h1>
        

        <div class="post-meta">
          <span class="post-time">
            發表於
            <time itemprop="dateCreated" datetime="2015-12-02T11:29:51+08:00" content="2015-12-02">
              2015-12-02
            </time>
          </span>

          

          
            
          

          

        </div>
      </header>
    


    <div class="post-body">

      
      

      
        
          <span itemprop="articleBody">
            
              <p>有位同事在使用dubbo的client调用自己编写的一个dubbo服务时，发现服务接口返回的Multimap（guava）里面的数据永远都是空的。接口定义如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CarTypePictureService</span> </span>&#123;</span><br><span class="line">   <span class="comment">/**</span><br><span class="line">    * 根据查询车型图片信息</span><br><span class="line">    * <span class="doctag">@param</span> btrIds</span><br><span class="line">    * <span class="doctag">@return</span></span><br><span class="line">    */</span></span><br><span class="line">   Multimap&lt;String, CarTypePictureDTO&gt; findCarTypePictureByBtrIds(List&lt;String&gt; btrIds);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>如果把返回类型改成Map，client就可以正常得到服务端返回的数据。因此问题是出在Multimap本身。</p>
<p>于是看Multimap的源码，服务端是通过HashMultimap.create()创建的Multimap实例，在这个方法中，最终跟到如下代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">transient</span> Map&lt;K, Collection&lt;V&gt;&gt; map;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">transient</span> <span class="keyword">int</span> totalSize;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Creates a new multimap that uses the provided map.</span><br><span class="line"> *</span><br><span class="line"> * <span class="doctag">@param</span> map place to store the mapping from each key to its corresponding</span><br><span class="line"> *     values</span><br><span class="line"> * <span class="doctag">@throws</span> IllegalArgumentException if &#123;<span class="doctag">@code</span> map&#125; is not empty</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="title">AbstractMapBasedMultimap</span><span class="params">(Map&lt;K, Collection&lt;V&gt;&gt; map)</span> </span>&#123;</span><br><span class="line">  checkArgument(map.isEmpty());</span><br><span class="line">  <span class="keyword">this</span>.map = map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>private transient Map<k, collection<v="">&gt; map 这个成员变量承载了multimap的数据，而它被transient关键字修饰了，这就意味着这个变量不会被序列化，因此dubbo在序列化服务端返回的Multimap<string, cartypepicturedto="">时，里面的map并没有序列化，client反序列化出来的对象自然也不会有数据了。</string,></k,></p>
<p>总结：写rpc服务时，接口永远不要返回guava的Multimap类型</p>

            
          </span>
        
      
    </div>

    <footer class="post-footer">
      

      

      
      
        <div class="post-eof"></div>
      
    </footer>
  </article>


    
      

  
  

  
  
  

  <article class="post post-type-normal " itemscope itemtype="http://schema.org/Article">

    
      <header class="post-header">

        
        
          <h1 class="post-title" itemprop="name headline">
            
            
              
                
                <a class="post-title-link" href="/2015/12/01/hello-world/" itemprop="url">
                  Hello World
                </a>
              
            
          </h1>
        

        <div class="post-meta">
          <span class="post-time">
            發表於
            <time itemprop="dateCreated" datetime="2015-12-01T21:27:23+08:00" content="2015-12-01">
              2015-12-01
            </time>
          </span>

          

          
            
          

          

        </div>
      </header>
    


    <div class="post-body">

      
      

      
        
          <span itemprop="articleBody">
            
              <p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>

            
          </span>
        
      
    </div>

    <footer class="post-footer">
      

      

      
      
        <div class="post-eof"></div>
      
    </footer>
  </article>


    

  </section>

  


        </div>

        


        

      </div>

      
        
  
  <div class="sidebar-toggle">
    <div class="sidebar-toggle-line-wrap">
      <span class="sidebar-toggle-line sidebar-toggle-line-first"></span>
      <span class="sidebar-toggle-line sidebar-toggle-line-middle"></span>
      <span class="sidebar-toggle-line sidebar-toggle-line-last"></span>
    </div>
  </div>

  <aside id="sidebar" class="sidebar">
    <div class="sidebar-inner">

      

      

      <section class="site-overview sidebar-panel  sidebar-panel-active ">
        <div class="site-author motion-element" itemprop="author" itemscope itemtype="http://schema.org/Person">
          <img class="site-author-image" src="/images/avatar.png" alt="李晨清" itemprop="image"/>
          <p class="site-author-name" itemprop="name">李晨清</p>
        </div>
        <p class="site-description motion-element" itemprop="description"></p>
        <nav class="site-state motion-element">
          <div class="site-state-item site-state-posts">
            <a href="/archives">
              <span class="site-state-item-count">3</span>
              <span class="site-state-item-name">文章</span>
            </a>
          </div>

          <div class="site-state-item site-state-categories">
            
              <span class="site-state-item-count">0</span>
              <span class="site-state-item-name">分類</span>
              
          </div>

          <div class="site-state-item site-state-tags">
            <a href="/tags">
              <span class="site-state-item-count">0</span>
              <span class="site-state-item-name">標籤</span>
              </a>
          </div>

        </nav>

        
          <div class="feed-link motion-element">
            <a href="/atom.xml" rel="alternate">
              <i class="fa fa-rss"></i>
              RSS
            </a>
          </div>
        

        <div class="links-of-author motion-element">
          
        </div>

        
        

        <div class="links-of-author motion-element">
          
        </div>

      </section>

      

    </div>
  </aside>


      
    </main>

    <footer id="footer" class="footer">
      <div class="footer-inner">
        <div class="copyright" >
  
  &copy; 
  <span itemprop="copyrightYear">2015</span>
  <span class="with-love">
    <i class="icon-next-heart fa fa-heart"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">李晨清</span>
</div>

<div class="powered-by">
  由 <a class="theme-link" href="http://hexo.io">Hexo</a> 強力驅動
</div>

<div class="theme-info">
  主題 -
  <a class="theme-link" href="https://github.com/iissnan/hexo-theme-next">
    NexT
  </a>
</div>



      </div>
    </footer>

    <div class="back-to-top"></div>
  </div>

  <script type="text/javascript" src="/vendors/jquery/index.js?v=2.1.3"></script>

  
  

  
    
    

  


  

  
  <script type="text/javascript" src="/vendors/fancybox/source/jquery.fancybox.pack.js"></script>
  <script type="text/javascript" src="/js/fancy-box.js?v=0.4.5.2"></script>


  <script type="text/javascript" src="/js/helpers.js?v=0.4.5.2"></script>
  <script type="text/javascript" src="/vendors/velocity/velocity.min.js"></script>
<script type="text/javascript" src="/vendors/velocity/velocity.ui.min.js"></script>

<script type="text/javascript" src="/js/motion.js?v=0.4.5.2" id="motion.global"></script>


  <script type="text/javascript" src="/vendors/fastclick/lib/fastclick.min.js?v=1.0.6"></script>
  <script type="text/javascript" src="/vendors/jquery_lazyload/jquery.lazyload.js?v=1.9.7"></script>

  

  <script type="text/javascript" src="/js/bootstrap.js"></script>

  
  

  
  

</body>
</html>
